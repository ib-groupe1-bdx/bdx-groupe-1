name: Continuous Integration
on:
  # Cette action ne se lance que sur un push sur la branche marquée
  push:
    branches:
      - main
  # Cette action ne se lance que sur un pull request vers la branche marquée
  pull_request:
    branches:
      - main

jobs:
  Test-Frontend:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]

    steps:
    # Recuperer le contenu de notre repository
    - name: Checkout repository
      uses: actions/checkout@v3

    # Installation de Node.js
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    # Installation des dépendances   
    - name: Install dependencies
      run: npm ci

    - run: npm run build --if-present

    # Test Unitaire
    - name: Launch test
      run: npm test

  build-image:
    runs-on: ubuntu-latest
    needs: [Test-Frontend]
    if: ${{ github.event_name == 'push' && github.ref_name == 'main' }}

    env:
    # On utilise le github container registry
      REGISTRY: ghcr.io
    # Le nom de l'image est le nom du github repository
      IMAGE_NAME: ${{ github.repository }}

    permissions:
      packages: write
      contents: read

    steps:
    # Recuperer le contenu de notre repository
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Setup Docker buildx
      uses: docker/setup-buildx-action@v1
      
    # Se connecter au github container registry
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract Docker metadata
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}